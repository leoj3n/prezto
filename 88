#!/usr/bin/env zsh

#
# Disallow sudo.
#

(( EUID == 0 )) && print "${0:t}: ALL YOUR BASE ARE BELONG TO US! Refusing to run as sudo." >&2 && exit 1

#
# Usage.
#

local usage="
usage: ${0:t} [-option ...] [--] command

options:
  -s         System-wide installation (/etc/zshenv instead of ~/.zshenv).

commands:
  forward    Drives the latest version into place.
  reverse    Backs out the changes made by DeLorean.
"

#
# Defaults.
#

local zshenv_ext='user'
local zshenv_loc="${HOME}/.zshenv"

#
# Get options.
#

while getopts ':s' opt; do
  case "${opt}" in
    (s)
      zshenv_ext='system'
      zshenv_loc="/etc/zshenv"
      ;;
    (:)
      print "${0:t}: option requires an argument: ${OPTARG}" >&2
      print "${usage}" >&2
      exit 1
      ;;
    ([?])
      print "${0:t}: unknown option: ${OPTARG}" >&2
      print "${usage}" >&2
      exit 1
    ;;
  esac
done
shift $((OPTIND - 1))

if (( $# < 1 )); then
  print "${usage}" >&2
  exit 1
fi

#
# Move zshenv into place.
#

if [[ -s "${zshenv_loc}" && ! "$(<"${zshenv_loc}")" =~ 'DeLorean' ]] && ! read -q "?Overwrite ${zshenv_loc} [y/N]? "; then
  print "\n${0:t}: Aborting temporal displacement!"
  exit 1
fi

local zshenv_schema="${"$(<"${0:a:h}/schematic/zshenv.${zshenv_ext}")"//__ZDOTDIR__/"${0:a:h}/ZDOTDIR"}"
print "${zshenv_schema}" | $([[ "$zshenv_ext" == 'system' ]] && print 'sudo') tee "${zshenv_loc}" >/dev/null

#
# Use the new shell.
#

[[ "$(<"${0:a:h}/README.md")" =~ '```DeLorean(.*)```' ]] && printf "${match[1]}"

if (( $+commands[afplay] )); then
  afplay "${0:a:h}/.github/bttf.wav" 2>&1 >/dev/null &
elif (( $+commands[aplay] )); then
  aplay -t wav "${0:a:h}/.github/bttf.wav" 2>&1 >/dev/null &
fi

NOFORTUNE=1 JIGOWATTS=1.21 exec "$SHELL" -l
