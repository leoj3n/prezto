#!/usr/bin/env zsh

(( EUID == 0 )) && print "$0: ALL YOUR BASE ARE BELONG TO US! Refusing to run as sudo." >&2 && exit 1

local usage="$(
cat <<EOF
usage: $0 [-option ...] [--] command

options:
  -e, --environment    Specify 'system' for system-wide installation to /etc/zshenv (default is 'user' which installs to ~/.zshenv).

commands:
  launch
  poweron
  install
  activate
  deactive
  engage
  reengage
  disengage
EOF
)"

#
# Defaults.
#

local zshenv_env='user'
local zshenv_loc="${HOME}/.zshenv"

#
# Get options.
#

while getopts ':e:(environment)' opt; do
  case "${opt}" in
    (e)
      if [[ "${OPTARG}" == 'system' ]]; then
        zshenv_env='system'
        zshenv_loc="/etc/zshenv"
      elif [[ "${OPTARG}" != 'user' ]]; then
        print "$0: option argument must be one of 'system' or 'user': ${OPTARG}" >&2
        print "${usage}" >&2
        exit 1
      fi
    ;;
    (:)
      print "$0: option requires an argument: ${OPTARG}" >&2
      print "${usage}" >&2
      exit 1
    ;;
    ([?])
      print "$0: unknown option: ${OPTARG}" >&2
      print "${usage}" >&2
      exit 1
    ;;
  esac
done
shift $((OPTIND - 1))

if (( $# < 1 )); then
  print "${usage}" >&2
  exit 1
fi

#
# Create environment.
#

{
  [[ -s "${zshenv_loc}" ]] && {
    #TODO: check if file matches template; if it does, do not abort.
    print "$0: Encountered a UFO (Unidentified File Object)! Move ${zshenv_loc} away and try again." >&2
    exit 1
  }

  local zshenv_schema="${"$(<schematic/zshenv.$zshenv_env)"//__ZDOTDIR__/"${0:a:h}"}"
  print "${zshenv_schema}" | $([[ "$zshenv_env" == 'system' ]] && print 'sudo') tee "${zshenv_loc}" >/dev/null
}

#
# Use the new shell.
#
# This will also trigger regeneration of completion dump if fpath
# module is in use.
#

WARPSPEED=1 exec "$SHELL" -l
